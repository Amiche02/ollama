# -------------------------------------------------------------------
# 1) Builder Stage
#    - Install Python, then pip-install all dependencies
# -------------------------------------------------------------------
    FROM nvidia/cuda:12.2.2-runtime-ubuntu22.04 AS builder

    # Install Python and build tools
    RUN apt-get update && apt-get install -y --no-install-recommends \
        python3.11 python3-pip build-essential \
        && rm -rf /var/lib/apt/lists/*

    WORKDIR /app

    # Copy your dependencies file(s)
    COPY requirements/requirements.txt ./requirements.txt

    # Upgrade pip and install dependencies
    RUN python3.11 -m pip install --upgrade pip
    RUN pip install --no-cache-dir -r requirements.txt

    # -------------------------------------------------------------------
    # 2) Final Stage
    # -------------------------------------------------------------------
    FROM nvidia/cuda:12.2.2-runtime-ubuntu22.04

    # (Optional) create non-root user
    RUN useradd --create-home appuser
    USER appuser
    WORKDIR /app

    # **We still need Python in final**:
    # Option (A): Install Python again directly:
    USER root
    RUN apt-get update && apt-get install -y --no-install-recommends \
        python3.11 python3-pip \
        && rm -rf /var/lib/apt/lists/*
    USER appuser

    # Option (B) (alternative to installing again): copy binaries from builder
    #  e.g. COPY --from=builder /usr/bin/python3.11 /usr/bin/python3.11
    #  etc.
    # (But installing in final is simpler if you don't mind the small overhead.)

    # Copy site-packages from builderâ€™s /usr/local to final
    COPY --from=builder /usr/local /usr/local

    # Now copy your backend app code
    COPY backend/ /app/

    # Expose FastAPI port
    EXPOSE 8000

    # Let Docker know that we want GPU (NVIDIA) capabilities
    ENV NVIDIA_VISIBLE_DEVICES=all
    ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

    # Start the app via uvicorn
    CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
